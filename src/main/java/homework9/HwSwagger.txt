openapi: 3.0.3
info:
  title: Заказ ресурсов в облаке
  version: 0.0.1
servers:
  - url: https://localhost:8080/api/v1
    description: Dev server
  - url: https://localhost:8080/api/v2
    description: Dev server
paths:
  /clouds:
    get:
      summary: Метод по получению ресурсов облака
      tags:
        - Clouds
      operationId: getAllClouds
      responses:
        "200" : 
          description: Успешный ответ со списком ресурсов
          content:
            adplication/json:
              schema:
               $ref: "#/components/schemas/Clouds"
        "default" : 
          description: Все остальное 
          content:
            adplication/json:
              schema:
               $ref: "#/components/schemas/Error"
    post:
      summary: Создание заказа на облако
      tags:
        - Clouds
      operationId: createCloud
      requestBody: 
        content:
          adplication/json:
              schema:
               $ref: "#/components/schemas/Cloud"
      responses:
        "200" : 
          description: Успешный ответ со списком ресурсов
          content:
            adplication/json:
              schema:
               $ref: "#/components/schemas/Clouds"
        "default" : 
          description: Все остальное 
          content:
            adplication/json:
              schema:
               $ref: "#/components/schemas/Error"
  /clouds/{cloud_id}:
    delete:
      summary: Отмена заказа
      tags: 
        - Clouds
      operationId: cancelCloudById
      parameters: 
        - name: cloud_id
          in: path
          required: true
          description: Id заказа облака
          schema:
            type: string
          example: 123
      responses: 
        "200" :
          description: Успешная отмена заказа
          content:
            adplication/json: {}
        "default" : 
          description: Все остальное
          content:
            adplication/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users:
    get: 
      summary: Получение списка клиентов
      tags: 
        - Users
      operationId: getClients
      responses:
        "200":
          description: Успешное получение списка клиентов
          content:
            adplication/json:
              schema:
                $ref: "#/components/schemas/Users"
        "default" : 
          description: Все остальное
          content:
            adplication/json:
              schema:
                $ref: "#/components/schemas/Error"
    post: 
      summary: Добавление нового клиента
      tags:
        - Users
      operationId: createClient
      requestBody:
        required: true
        content:
          adplication/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Успешное добавление нового клиента
          content:
            adplication/json:
              schema:
                $ref: "#/components/schemas/Users"
        "default" : 
          description: Все остальное
          content:
            adplication/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users/{user_id}:
    get:
      summary: Получение клиента по Id
      tags: 
        - Users
      operationId: getUserById
      parameters: 
        - name: user_id
          in: path
          required: true
          description: Id клиента
          schema:
            type: string
          example: 123
      responses: 
        "200" :
          description: Успешный ответ получения клиента по Id
          content:
            adplication/json: 
              schema:
               $ref: "#/components/schemas/User"
        "default" : 
          description: Все остальное
          content:
            adplication/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Удаление клиента
      tags: 
        - Users
      operationId: deleteUserById
      parameters: 
        - name: user_id
          in: path
          required: true
          description: Id клиента
          schema:
            type: string
          example: 123
      responses: 
        "200" :
          description: Успешное удаление клиента
          content:
            adplication/json: {}
        "default" : 
          description: Все остальное
          content:
            adplication/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Обновление параметров клиента по Id
      tags: 
        - Users
      operationId: updateUserById
      parameters: 
        - name: user_id
          in: path
          required: true
          description: Id клиента
          schema:
            $ref: "#/components/schemas/User"
      responses: 
        "200" :
          description: Успешное обновление параметров клиента по Id
          content:
            adplication/json: 
              schema:
               $ref: "#/components/schemas/User"
        "default" : 
          description: Все остальное
          content:
            adplication/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Cloud: 
      type: object
      properties: 
        cloud_id:
          type: integer
          example: 123
        ram:
          type: integer
          example: 16
        cpu: 
          type: integer
          example: 2
        ssd:
          type: integer
          example: 200
        os: 
          type: string
          example: linux 
    Clouds:
      type: array
      items:
        $ref: "#/components/schemas/Cloud"
    Error: 
      type: object
      properties: 
        code_error:
          type: integer
          example: 28
        code_message:
          type: string
          example: "Something went wrong"
    User: 
      type: object
      properties: 
        user_id:
          type: integer
          example: 777
        user_name:
          type: string
          example: "Bob"
        email:
          type: string
          example: "B@gmail.com"
        hash: 
          type: string
          example: "#FFF1HH13"
    Users:
      type: array
      items: 
        $ref: "#/components/schemas/User"